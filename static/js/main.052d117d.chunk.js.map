{"version":3,"sources":["logo.svg","Banner.js","Search.js","Results.js","Nominations.js","App.js","reportWebVitals.js","index.js"],"names":["Banner","props","className","children","Search","getTitleString","title","searchString","titleArr","Array","from","split","i","length","inputChange","e","target","value","handleSearch","a","setErrorData","searchResultList","fetch","valueOf","response","json","Response","Error","onChange","placeholder","type","React","Component","Results","error","results","map","result","NomineeList","film","imdbID","includes","onClick","addNominee","src","Poster","alt","Title","Year","Nominations","removeNominee","App","setState","state","errorData","setSearchResultList","list","searchList","nominee","newNomineeList","nominationList","push","isComplete","filter","this","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.052d117d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import \"./Banner.css\"\n\nfunction Banner(props){\n    return (\n        <div className=\"title-banner\">\n            <h1 className=\"web-title\">{props.children}</h1>\n        </div>\n    )\n}\n\nexport default Banner;\n","import \"./Search.css\"\nimport React, { Component } from \"react\";\n\n\nclass Search extends React.Component{\n    getTitleString=(title)=>{\n        let searchString=''\n        let titleArr=Array.from(title.split(' '))\n        for(var i=0;i<titleArr.length;i++){\n            if(titleArr[i]!=''){\n                searchString+=titleArr[i]\n                if(!(i==titleArr.length-1) && titleArr[i+1]!=''){\n                    searchString+='+'\n                }\n            }\n        }\n        \n        return searchString\n        \n    }\n    inputChange=(e)=>{\n        var searchString=this.getTitleString(e.target.value)\n        this.handleSearch(searchString)\n    }\n    handleSearch=async(searchString)=>{\n        if(searchString==\"\"){\n            this.props.setErrorData(null)\n            this.props.searchResultList([])\n            return\n        }\n        let response=await fetch('https://www.omdbapi.com/?s='+searchString.valueOf()+'&i=tt3896198&apikey=c6283e6b')\n        response=await response.json()\n        if(response.Response==\"True\"){\n            this.props.searchResultList(response.Search)\n            this.props.setErrorData(null)\n        }\n        else if(response.Response==\"False\"){\n            this.props.setErrorData(response.Error)\n        }\n    }\n    render(){\n        return (\n            <div className=\"search-container\">\n                <h3>Movie Title:</h3>\n                <input onChange={(e)=>{\n                    this.inputChange(e)\n                }} placeholder=\"The Revanent\" type=\"text\"></input>\n            </div>\n        )\n    }\n}\n\n\nexport default Search;\n","import React from 'react'\nimport './Results.css'\nfunction Results(props) {\n    return (\n        <div className=\"search-result-list\">\n            <h2>Results:</h2>\n            \n            {props.error==null?\n            props.results.map((result) => {\n                return (\n                    <div className=\"result\" key={result.imdbID}>\n                        <div className=\"result-container\">\n                        {\n                            !(props.NomineeList.map(film=>film.imdbID).includes(result.imdbID))?\n                            <div onClick={(e)=> props.addNominee(result)} className=\"addBtn\">\n                            Add\n                            </div>\n                            :\n                            <div onClick={(e)=>null} className=\"nominatedBtn\">\n                            Nominated\n                            </div>                        \n                        }\n                        <img src={result.Poster} alt=\"new\"/>\n                        <div>\n                            <p>{result.Title}</p>\n                            <p>{result.Year}</p>\n                        </div>\n                        </div>\n                    </div>\n                )\n            }):\n            <h2>{props.error}</h2>\n            }\n        </div>\n    )\n}\nexport default Results","import React from 'react'\nimport './Nominations.css'\n\nfunction Nominations(props) {\n    return (\n        <div className=\"nomination-list\">\n             <h2>Nominations ({props.NomineeList.length}/5):</h2>\n            {props.NomineeList.map((result) => {\n                return (\n                    <div className=\"nominee\" key={result.imdbID}>\n                         <div className=\"result-container\">\n                        <div onClick={(e)=>props.removeNominee(result)} className=\"removeBtn\">\n                            Remove\n                        </div>\n                        <img src={result.Poster} alt=\"new\"/>\n                        <div>\n                            <p>{result.Title}</p>\n                            <p>{result.Year}</p>\n                        </div>\n                        </div>\n                    </div>\n                )\n            })            \n            }\n        </div>\n    )\n}\nexport default Nominations","import logo from './logo.svg';\nimport './App.css';\nimport './Banner'\nimport Search from './Search'\nimport Banner from './Banner';\nimport React from 'react'\nimport Results from './Results'\nimport Nominations from './Nominations';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      errorData: null,\n      searchList: [],\n      nominationList: [],\n      isComplete:false\n    }\n  }\n\n  setErrorData = (error) => {\n    this.setState((state) => ({\n      ...state,\n      errorData: error\n    }))\n  }\n  setSearchResultList = (list) => {\n    this.setState((state) => ({\n      ...state,\n      searchList: list\n    }))\n  }\n  addNominee = (nominee) => {\n    let newNomineeList = this.state.nominationList\n    newNomineeList.push(nominee)\n    let isComplete=(newNomineeList && newNomineeList.length>=5)\n    this.setState((state) => ({\n      ...state,\n      nominationList: newNomineeList,\n      isComplete: isComplete\n    }))\n  }\n\n  removeNominee = (nominee) => {\n    let newNomineeList = this.state.nominationList.filter(result => nominee != result)\n    this.setState((state) => ({\n      ...state,\n      nominationList: newNomineeList\n    }))\n  }\n  render() {\n    return (\n      <>\n      {this.state.isComplete?\n      <div className=\"active\">Thank You For Nominating</div>:\n      null\n      }\n        <div className=\"main-container\">\n          <Banner>The Shoppies</Banner>\n          <div className=\"main-content\">\n            <Search setErrorData={this.setErrorData} searchResultList={this.setSearchResultList} ></Search>\n            <Results error={this.state.errorData} NomineeList={this.state.nominationList} results={this.state.searchList} addNominee={this.addNominee} className=\"search-result-list\"></Results>\n            <Nominations removeNominee={this.removeNominee} NomineeList={this.state.nominationList}></Nominations>\n          </div>\n      </div>\n      </>\n    );\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}